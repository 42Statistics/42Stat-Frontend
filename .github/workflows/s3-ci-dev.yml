name: Upload build result to s3 bucket (development ver.)

on:
  push:
    branches: [dev]

permissions:
  id-token: write   # This is required for requesting the JWT
  contents: read    # This is required for actions/checkout

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      DEFAULT_BUCKET_REGION: ${{ secrets.DEFAULT_BUCKET_REGION }}
      S3_BUCKET: ${{ secrets.DEV_S3_BUCKET }}
      CLOUDFRONT_DISTRIBUTION_ID: ${{ secrets.DEV_CLOUDFRONT_DISTRIBUTION_ID }}

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3
        with:
          ref: dev
          submodules: true
          token: ${{ secrets.READ_PRIVATE_SUBMODULE_TOKEN }}

      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ vars.AWS_ROLE_TO_ASSUME }}
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: ${{ vars.AWS_REGION }}

      - name: Waiting build using Docker Compose
        run: |
          docker compose -f docker-compose.dev.yml up -d
          docker compose -f docker-compose.dev.yml logs -f

      - name: Copy built files to ./dist
        run: |
          mkdir -p ./dist
          cp -r ./app/dist/* ./dist/

      - name: Install AWS
        run: |
          sudo apt-get update
          sudo apt-get install awscli

      - name: Upload to S3
        run: |
          aws s3 sync ./app/dist s3://$S3_BUCKET --region $DEFAULT_BUCKET_REGION --delete --exclude "cdn/*" --exclude "fonts/*"
          aws s3 cp --cache-control 'max-age=300, stale-if-error=86400' ./app/dist/index.html s3://$S3_BUCKET --region $DEFAULT_BUCKET_REGION

      # - name: Invalidate CloudFront
      #   run: |
      #     aws cloudfront create-invalidation --distribution-id $CLOUDFRONT_DISTRIBUTION_ID --paths "/index.html"
